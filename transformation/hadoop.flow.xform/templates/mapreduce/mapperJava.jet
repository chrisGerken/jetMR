<%-- This code copyright Gerken Intellectual Properties LLC --%>
<c:include template="templates/common/javaHeader.jet"/>
package <c:get select="$job/@jobPkg" />;

<c:userRegion>// Begin imports<c:initialCode>

import java.nio.ByteBuffer;
import java.nio.charset.CharacterCodingException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Hashtable;
import java.util.Iterator;
import java.util.List;
import java.util.SortedMap;
import java.util.StringTokenizer;

import java.io.IOException;

import <c:get select="$artifact/@writablesPkg" />.*;

import org.apache.cassandra.db.IColumn;
import org.apache.cassandra.utils.ByteBufferUtil;

import org.apache.hadoop.conf.Configuration;
import org.apache.hadoop.io.*;
import org.apache.hadoop.mapreduce.InputSplit;
import org.apache.hadoop.mapreduce.Mapper;
import org.apache.hadoop.mapreduce.OutputCommitter;
import org.apache.hadoop.mapreduce.RecordReader;
import org.apache.hadoop.mapreduce.RecordWriter;
import org.apache.hadoop.mapreduce.StatusReporter;
import org.apache.hadoop.mapreduce.TaskAttemptID;
import org.apache.hadoop.mapreduce.Mapper.Context;

</c:initialCode>// End imports</c:userRegion>

public class <c:get select="$input/@mapperJava" /> extends
		org.apache.hadoop.mapreduce.Mapper<<c:get select="$input/@inKeyType" />,<c:get select="$input/@inValueType" />,<c:get select="$job/@keyType" />,<c:get select="$job/@valueType" />> {

	<c:userRegion>// Begin declarations <c:initialCode>


	</c:initialCode>// End declarations </c:userRegion>

	@Override
	protected void setup(
			org.apache.hadoop.mapreduce.Mapper<<c:get select="$input/@inKeyType" />,<c:get select="$input/@inValueType" />,<c:get select="$job/@keyType" />,<c:get select="$job/@valueType" />>.Context context)
			throws IOException, InterruptedException {

		<c:userRegion>// Begin setup logic<c:initialCode>
		

		</c:initialCode>// End setup logic</c:userRegion>

	}

	@Override
	public void map(<c:get select="$input/@inKeyType" /> key,<c:get select="$input/@inValueType" /> value, Context context)
			throws IOException, InterruptedException {

		<c:userRegion>// Begin map logic <c:initialCode>
<c:include template="templates/mapreduce/mapper/{$artifact/dataloc[@name=$input/@source]/@kind}/map.jet" />
		</c:initialCode>// End map logic </c:userRegion>

	}

	@Override
	protected void cleanup(Context context) throws IOException,	InterruptedException {

		<c:userRegion>// Begin cleanup logic<c:initialCode>


		</c:initialCode>// End cleanup logic</c:userRegion>
		
	}

	<c:userRegion>// Begin custom methods <c:initialCode>

	</c:initialCode>// End custom methods</c:userRegion>

/*	public Mapper<<c:get select="$input/@inKeyType" />,<c:get select="$input/@inValueType" />,<c:get select="$job/@keyType" />,<c:get select="$job/@valueType" />>.Context testContext(Configuration conf,TaskAttemptID taid,
			RecordReader<<c:get select="$input/@inKeyType" />, <c:get select="$input/@inValueType" />> rr,RecordWriter<<c:get select="$job/@keyType" />, <c:get select="$job/@valueType" />> rw,
			OutputCommitter oc, StatusReporter sr, InputSplit is) throws IOException, InterruptedException {
		
		return new Context(conf,taid,rr,rw,oc,sr,is);

	}
*/

}
